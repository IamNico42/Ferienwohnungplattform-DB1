

-- 1. Adresse
CREATE TABLE Adresse (
    ID NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    Straße VARCHAR2(100) NOT NULL,
    Hausnummer VARCHAR2(10) NOT NULL,
    PLZ NUMBER NOT NULL,
    Land VARCHAR2(100) NOT NULL
);

-- 2. Ferienwohnung
CREATE TABLE Ferienwohnung (
    ID NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    ADRESSE_ID NUMBER NOT NULL,
    Größe NUMBER NOT NULL CHECK (Größe > 0),
    Name VARCHAR2(100) NOT NULL,
    PreisProTag NUMBER(10,2) NOT NULL CHECK (PreisProTag > 0),
    Zimmer NUMBER NOT NULL CHECK (Zimmer > 0),
    CONSTRAINT fk_fw_adresse FOREIGN KEY (ADRESSE_ID) REFERENCES Adresse(ID)
);

-- 3. Kunde
CREATE TABLE Kunde (
    ADRESSE_ID NUMBER NOT NULL,
    Newsletter CHAR(1) DEFAULT '0' CHECK (Newsletter IN ('0', '1')),
    MAILADRESSE VARCHAR2(255) PRIMARY KEY CHECK (MAILADRESSE LIKE '%@%.%'),
    Nachname VARCHAR2(100) NOT NULL,
    Vorname VARCHAR2(100) NOT NULL,
    Passwort VARCHAR2(255) NOT NULL,
    IBAN VARCHAR2(34) NOT NULL CHECK (IBAN LIKE 'DE%'),
    CONSTRAINT fk_kunde_adresse FOREIGN KEY (ADRESSE_ID) REFERENCES Adresse(ID)
);

-- 4. Ausstattung
CREATE TABLE Ausstattung (
    AUSTATTUNGS_BEZEICHNUNG VARCHAR2(100) PRIMARY KEY
);

-- 5. Touristenattraktion
CREATE TABLE Touristenattraktion (
    ATTRAKTIONS_NAME VARCHAR2(100) PRIMARY KEY,
    Beschreibung VARCHAR2(255)
);

-- 6. Bilder
CREATE TABLE Bilder (
    URL VARCHAR2(255) PRIMARY KEY,
    FERIENWOHNUNG_ID NUMBER NOT NULL,
    CONSTRAINT fk_bilder_fw FOREIGN KEY (FERIENWOHNUNG_ID) REFERENCES Ferienwohnung(ID) ON DELETE CASCADE
);

-- 7. Ferienwohnung_Ausstattung
CREATE TABLE Ferienwohnung_Ausstattung (
    FERIENWOHNUNG_ID NUMBER NOT NULL,
    AUSTATTUNGS_BEZEICHNUNG VARCHAR2(255) NOT NULL,
    PRIMARY KEY (FERIENWOHNUNG_ID, AUSTATTUNGS_BEZEICHNUNG),
    CONSTRAINT fk_fa_fw FOREIGN KEY (FERIENWOHNUNG_ID) REFERENCES Ferienwohnung(ID) ON DELETE CASCADE,
    CONSTRAINT fk_fa_ausstattung FOREIGN KEY (AUSTATTUNGS_BEZEICHNUNG) REFERENCES Ausstattung(AUSTATTUNGS_BEZEICHNUNG) ON DELETE CASCADE
);

-- 8. Ferienwohnung_Touristenattraktion
CREATE TABLE Ferienwohnung_Touristenattraktion (
    FERIENWOHNUNG_ID NUMBER NOT NULL,
    ATTRAKTIONS_NAME VARCHAR2(255) NOT NULL,
    Entfernung_KM NUMBER NOT NULL CHECK (Entfernung_KM <= 50),
    PRIMARY KEY (FERIENWOHNUNG_ID, ATTRAKTIONS_NAME),
    CONSTRAINT fk_fwt_fw FOREIGN KEY (FERIENWOHNUNG_ID) REFERENCES Ferienwohnung(ID) ON DELETE CASCADE,
    CONSTRAINT fk_fwt_attr FOREIGN KEY (ATTRAKTIONS_NAME) REFERENCES Touristenattraktion(ATTRAKTIONS_NAME) ON DELETE CASCADE
);

-- 9. Buchung
CREATE TABLE Buchung (
    ID NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    FERIENWOHNUNG_ID NUMBER NOT NULL,
    MAILADRESSE VARCHAR2(255) NOT NULL,
    Buchungsdatum DATE NOT NULL,
    Buchungszeitraum_start DATE NOT NULL,
    Buchungszeitraum_ende DATE NOT NULL,
    Stornodatum DATE,
    Bewertungs_Datum DATE,
    Sterne NUMBER(2,1) CHECK (Sterne BETWEEN 1 AND 5),
    Rechnungsbetrag NUMBER(10,2),
    Rechnungsdatum DATE,
    CONSTRAINT ck_zeitraum CHECK (Buchungszeitraum_ende >= Buchungszeitraum_start + 3),
    CONSTRAINT fk_buchung_fw FOREIGN KEY (FERIENWOHNUNG_ID) REFERENCES Ferienwohnung(ID),
    CONSTRAINT fk_buchung_kunde FOREIGN KEY (MAILADRESSE) REFERENCES Kunde(MAILADRESSE)
);

-- 10. Anzahlung
CREATE TABLE Anzahlung (
    ID NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    BUCHUNG_ID NUMBER NOT NULL,
    Zahlungsdatum DATE NOT NULL,
    Geldbetrag NUMBER(10,2) NOT NULL CHECK (Geldbetrag > 0),
    CONSTRAINT fk_anzahlung_buchung FOREIGN KEY (BUCHUNG_ID) REFERENCES Buchung(ID)
);






-- Adresse einfügen
INSERT INTO Adresse (Straße, Hausnummer, PLZ, Land) 
VALUES ('Hauptstr.', '1', 12345, 'Deutschland');

-- Ferienwohnung einfügen
INSERT INTO Ferienwohnung (ADRESSE_ID, Größe, Name, PreisProTag, Zimmer) 
VALUES (1, 80, 'Alpenblick', 150.00, 3);

-- Ausstattung einfügen (einzeln, da Oracle kein Multi-Insert wie in MySQL unterstützt)
INSERT INTO Ausstattung (AUSTATTUNGS_BEZEICHNUNG) VALUES ('WLAN');
INSERT INTO Ausstattung (AUSTATTUNGS_BEZEICHNUNG) VALUES ('Pool');

-- Ferienwohnung_Ausstattung einfügen
INSERT INTO Ferienwohnung_Ausstattung (FERIENWOHNUNG_ID, AUSTATTUNGS_BEZEICHNUNG) 
VALUES (1, 'WLAN');
INSERT INTO Ferienwohnung_Ausstattung (FERIENWOHNUNG_ID, AUSTATTUNGS_BEZEICHNUNG) 
VALUES (1, 'Pool');

-- Bilder einfügen
INSERT INTO Bilder (URL, FERIENWOHNUNG_ID)
VALUES ('/bilder/alpenblick.jpg', 1);

-- Kunde einfügen (TRUE wird als '1' gespeichert bei CHAR(1))
INSERT INTO Kunde (ADRESSE_ID, Newsletter, MAILADRESSE, Nachname, Vorname, Passwort, IBAN) 
VALUES (1, '1', 'max.muster@example.com', 'Muster', 'Max', 'password123', 'DE12345678901234567890');

-- Buchung einfügen
INSERT INTO Buchung (FERIENWOHNUNG_ID, MAILADRESSE, Buchungsdatum, Buchungszeitraum_start, Buchungszeitraum_ende) 
VALUES (1, 'max.muster@example.com', SYSDATE, DATE '2024-01-01', DATE '2024-01-10');

-- Anzahlung einfügen
INSERT INTO Anzahlung (BUCHUNG_ID, Zahlungsdatum, Geldbetrag) 
VALUES (1, SYSDATE, 450.00);

-- Standard-SELECTs zum Überprüfen
SELECT * FROM Adresse;
SELECT * FROM Ferienwohnung;
SELECT * FROM Kunde;
SELECT * FROM Buchung;

-- Weitere SELECT-Abfragen

SELECT Name, Größe, PreisProTag, Zimmer
FROM Ferienwohnung;

SELECT b.Buchungsdatum, b.Buchungszeitraum_start, b.Buchungszeitraum_ende, f.Name AS Ferienwohnung
FROM Buchung b
JOIN Ferienwohnung f ON b.FERIENWOHNUNG_ID = f.ID
WHERE b.MAILADRESSE = 'max.muster@example.com';

SELECT f.Name AS Ferienwohnung, fa.AUSTATTUNGS_BEZEICHNUNG AS Ausstattung
FROM Ferienwohnung f
JOIN Ferienwohnung_Ausstattung fa ON f.ID = fa.FERIENWOHNUNG_ID;

-- Beispielhafte Anzeige von Buchungsdaten inkl. Rechnungsbetrag
SELECT Buchungsdatum, Rechnungsbetrag
FROM Buchung;

-- Rechtevergabe (symbolisch, falls du Rechte brauchst)
-- Leserechte (wie zuvor)
GRANT SELECT ON Adresse TO DBSYS1;
GRANT SELECT ON Ferienwohnung TO DBSYS1;
GRANT SELECT ON Bilder TO DBSYS1;
GRANT SELECT ON Ausstattung TO DBSYS1;
GRANT SELECT ON Ferienwohnung_Ausstattung TO DBSYS1;
GRANT SELECT ON Touristenattraktion TO DBSYS1;
GRANT SELECT ON Ferienwohnung_Touristenattraktion TO DBSYS1;
GRANT SELECT ON Kunde TO DBSYS1;

-- Schreibrechte
GRANT INSERT ON Buchung TO DBSYS1;

-- Nur wenn der Kunde selbst Zahlungen vornimmt
GRANT INSERT ON Anzahlung TO DBSYS1;

-- UPDATE-Rechte auf Buchung – Bewertung und Stornierung
GRANT UPDATE (Sterne, Bewertungs_Datum, Stornodatum) ON Buchung TO DBSYS1;

-- UPDATE-Rechte auf eigene Kundeninformationen (aber nur selektiv)
GRANT UPDATE (Newsletter, Passwort, IBAN) ON Kunde TO DBSYS1;


